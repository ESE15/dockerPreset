version: "3.2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeeper
    volumes:
      - "zookeeper_data:/bitnami"
    ports:
      - "2181:2181"
    networks:
      - kafka_net
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:2.8.1
    container_name: kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_INTER_BROKER_USER: user
      KAFKA_INTER_BROKER_PASSWORD: bitnami
      KAFKA_CFG_MAX_PARTITION_FETCH_BYTES: 1048576
      KAFKA_CFG_MAX_REQUEST_SIZE: 1048576
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_HOST_NAME: kafka
      KAFKA_CFG_ADVERTISED_PORT: 9092
    volumes:
      - "kafka_data:/bitnami"
      #- ~/dockerPreset/volumes/kafka-persistence:/bitnami/kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka_net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui-nhost
    network_mode: host
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: localhost:2181

networks:
  kafka_net:

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local